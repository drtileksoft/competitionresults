@using CompetitionResults.Data
@using Microsoft.AspNetCore.Identity
@using System.Security.Claims
@inject CompetitionStateService CompetitionState
@inject CompetitionService CompetitionService
@inject UserIdStateService UserIdStateService
@implements IDisposable

<select @onchange="OnSelectionChange" style="width: 400px; margin-top: 15px;">
    @foreach (var competition in competitions)
    {
        <option value="@competition.Id">@competition.Name</option>
    }
</select>

@if (!string.IsNullOrEmpty(errorMessage))
{
    <div class="alert alert-danger" role="alert">
        @errorMessage
    </div>
}

@code {
    private string errorMessage;
    private List<Competition> competitions;

    protected override async Task OnInitializedAsync()
    {
        CompetitionService.OnCompetitionsChanged += LoadData;

        LoadData();
    }

    private async void LoadData()
    {
        //competitions = await CompetitionService.GetCompetitionsForManagerAsync(await UserIdStateService.GetUserIdAsync());
        competitions = await CompetitionService.GetAllCompetitionsAsync();
        if (competitions != null && competitions.Count > 0 && CompetitionState.SelectedCompetitionId == 0)
        {
            // Automatically select the first competition
            CompetitionState.SelectedCompetitionId = competitions[0].Id;
        }
        StateHasChanged();
    }

    public void Dispose()
    {
        CompetitionService.OnCompetitionsChanged -= LoadData;
    }

    private async void OnSelectionChange(ChangeEventArgs e)
    {
        int competitionId = int.Parse(e.Value.ToString());
        //var managerCompetitions = await CompetitionService.GetCompetitionsForManagerAsync(await UserIdStateService.GetUserIdAsync());
        var managerCompetitions = await CompetitionService.GetAllCompetitionsAsync();

        if (managerCompetitions.Any(c => c.Id == competitionId))
        {
            CompetitionState.SelectedCompetitionId = competitionId;
            errorMessage = string.Empty; // Clear previous error messages if any
        }
        else
        {
            errorMessage = "Error: Invalid competition selection.";
        }
    }


}
